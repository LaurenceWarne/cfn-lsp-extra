[tool.poetry]
name = "cfn-lsp-extra"
version = "0.7.1"
description = "Cfn Lsp Extra"
authors = ["Laurence Warne <laurencewarne@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/laurencewarne/cfn-lsp-extra"
repository = "https://github.com/laurencewarne/cfn-lsp-extra"
classifiers = ["Topic :: Software Development"]

[tool.poetry.urls]
Changelog = "https://github.com/laurencewarne/cfn-lsp-extra/releases"

[tool.poetry.dependencies]
python = "^3.8"
click = "^8.1.7"
cfn-lint = "^1.20.0"
pygls = "^1.3.1"  # pygls = { path = "../pygls/", develop = false }
PyYAML = "^6.0.2"
types-PyYAML = "^6.0.2"
platformdirs = "^4.3.6"
attrs = "^24.2"
importlib_resources = "^6.4.0"
# Need to pin a version otherwise 'poetry update' goes crazy
aws-sam-translator = "^1.94.0"

# Optional: https://python-poetry.org/docs/pyproject/#extras
lxml = { version = "^5.2.1", optional = true }
markdownify = { version = "^0.12.1", optional = true }
beautifulsoup4 = { version = "^4.12.3", optional = true }
types-beautifulsoup4 = { version = "^4.12.0", optional = true }
requests = { version = "^2.32.3", optional = true }
types-requests = { version = "^2", optional = true }

[tool.poetry.dev-dependencies]
coverage = {extras = ["toml"], version = ">=6.2"}
ruff = "^0.8.0"
mypy = "^1.13.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-mock = "^3.14"
# https://github.com/swyddfa/lsp-devtools
pytest-lsp = "^0.4.3" #pytest-lsp = { path = "../lsp-devtools/lib/pytest-lsp/"}
python-lsp-server = "^1.11.0"
pylsp-mypy = "^0.6.8"
python-lsp-ruff = "^2.2.1"
nox = "^2024.10.9"

[tool.poetry.extras]
parse = [
  "lxml",
  "markdownify",
  "beautifulsoup4",
  "types-beautifulsoup4",
  "requests",
  "types-requests"
]

[tool.poetry.scripts]
cfn-lsp-extra = "cfn_lsp_extra.__main__:main"

[tool.coverage.paths]
source = ["cfn_lsp_extra", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["cfn_lsp_extra"]
omit = ["cfn_lsp_extra/scrape/*", "cfn_lsp_extra/server.py", "cfn_lsp_extra/__main__.py"]

[tool.coverage.report]
show_missing = true
fail_under = 80

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[[tool.mypy.overrides]]
module = "cfnlint.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = ["integration: mark the test as an integration test"]
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
exclude = [
    "tests",  # MAYBE shouldn't be excluding this
    "bin"
]

[tool.ruff.lint]
select = [
    "F",    # Pyflakes
    "E",    # Pycodestyle
    "W",    # Pycodestyle
    "I",    # isort
    "N",    # PEP8 naming
    "B",    # flake8-bugbear
    "PIE",  # flake8-pie
    "SIM",  # flake8-simplify
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "A",    # flake8-builtins
]

ignore = [
    # "W503",  # line break before binary operator
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "E731",  # do not assign a lambda expression, use a def
    # "E704"   # multiple statements on one line (def)
]

exclude = [
    "tests"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
